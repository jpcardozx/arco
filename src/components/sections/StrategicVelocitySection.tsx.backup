'use client';

/**
 * STRATEGIC VELOCITY FRAMEWORK SECTION
 * 
 * Substitui "Performance desta Página" com foco no modelo de negócios real:
 * - Pacotes produtizados com escopo fechado
 * - Diagnóstico pago como tripwire
 * - Lead magnets específicos
 * - Retainers baseados em ROI comprovado
 * 
 * Design inspirado em Hero + Pricing sections (glassmorphism + brand colors)
 */

import React, { useState } from 'react';
import { motion, useMotionValue, useTransform } from 'framer-motion';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Container } from '@/components/primitives/Container/Container';
import {
  Zap,
  Target,
  TrendingUp,
  CheckCircle2,
  ArrowRight,
  Clock,
  DollarSign,
  FileText,
  Calendar,
  BarChart3,
  Sparkles,
  Shield,
  Rocket,
  Lock
} from 'lucide-react';

interface PackageFeature {
  text: string;
  highlight?: boolean;
}

interface ProductizedPackage {
  id: string;
  name: string;
  tagline: string;
  price: string;
  timeline: string;
  deliverable: string;
  features: PackageFeature[];
  cta: string;
  popular?: boolean;
}

// Background Component: Radial Gradients sutis
const StrategicRadialBg: React.FC = () => {
  const mouseX = useMotionValue(0);
  const mouseY = useMotionValue(0);

  return (
    <div 
      className="absolute inset-0 overflow-hidden"
      onMouseMove={(e) => {
        const rect = e.currentTarget.getBoundingClientRect();
        mouseX.set(e.clientX - rect.left);
        mouseY.set(e.clientY - rect.top);
      }}
    >
      {/* Teal radial - top left */}
      <motion.div
        className="absolute -top-1/4 -left-1/4 w-1/2 h-1/2 rounded-full filter blur-3xl"
        style={{
          background: 'radial-gradient(circle, rgba(20, 184, 166, 0.12) 0%, transparent 70%)',
        }}
        animate={{
          x: [0, 40, 0],
          y: [0, -30, 0],
          scale: [1, 1.1, 1],
        }}
        transition={{
          duration: 18,
          repeat: Infinity,
          ease: "easeInOut"
        }}
      />

      {/* Orange radial - center right */}
      <motion.div
        className="absolute top-1/3 -right-1/4 w-2/3 h-2/3 rounded-full filter blur-3xl"
        style={{
          background: 'radial-gradient(circle, rgba(249, 115, 22, 0.10) 0%, transparent 70%)',
        }}
        animate={{
          x: [0, -30, 0],
          y: [0, 40, 0],
          scale: [1, 1.15, 1],
        }}
        transition={{
          duration: 22,
          repeat: Infinity,
          ease: "easeInOut",
          delay: 2
        }}
      />

      {/* Purple radial - bottom */}
      <motion.div
        className="absolute -bottom-1/4 left-1/3 w-1/2 h-1/2 rounded-full filter blur-3xl"
        style={{
          background: 'radial-gradient(circle, rgba(139, 92, 246, 0.08) 0%, transparent 70%)',
        }}
        animate={{
          scale: [1, 1.2, 1],
          opacity: [0.08, 0.12, 0.08],
        }}
        transition={{
          duration: 15,
          repeat: Infinity,
          ease: "easeInOut",
          delay: 4
        }}
      />

      {/* Grid pattern */}
      <div
        className="absolute inset-0 opacity-[0.015]"
        style={{
          backgroundImage: `linear-gradient(rgba(20, 184, 166, 0.3) 1px, transparent 1px),
                            linear-gradient(90deg, rgba(20, 184, 166, 0.3) 1px, transparent 1px)`,
          backgroundSize: '60px 60px'
        }}
      />
    </div>
  );
};

export const StrategicVelocitySection: React.FC = () => {
  const [hoveredPackage, setHoveredPackage] = useState<string | null>(null);

  // Degraus estratégicos do funil
  const velocityLadder = [
    {
      step: '01',
      icon: FileText,
      title: 'Lead Magnet Gratuito',
      description: 'Checklist, template ou teardown técnico que gera ação imediata',
      example: 'Checklist de 15 pontos para otimizar LP/Ads',
      color: 'teal'
    },
    {
      step: '02',
      icon: Target,
      title: 'Diagnóstico Pago',
      description: 'Tripwire de valor: briefing estratégico dos próximos 90 dias',
      example: 'Análise + roadmap priorizado em 7-14 dias',
      color: 'orange'
    },
    {
      step: '03',
      icon: Rocket,
      title: 'Pacote Produtizado',
      description: 'Escopo fechado, prazo curto, métrica de sucesso clara',
      example: 'Sprint de otimização com KPIs definidos',
      color: 'purple'
    },
    {
      step: '04',
      icon: TrendingUp,
      title: 'Retainer Focado',
      description: 'Manutenção + novas hipóteses baseadas em dados do pacote',
      example: 'Fila de tarefas mensais com restrições priorizadas',
      color: 'teal'
    }
  ];

  // Pacotes produtizados (exemplo)
  const packages: ProductizedPackage[] = [
    {
      id: 'starter',
      name: 'Performance Sprint',
      tagline: 'Para quem precisa provar ROI rápido',
      price: 'R$ 8.900',
      timeline: '14 dias',
      deliverable: 'LCP < 2.5s + Relatório de impacto',
      features: [
        { text: 'Auditoria técnica completa' },
        { text: 'Otimização de LCP, FID, CLS' },
        { text: 'Implementação de quick wins' },
        { text: 'Relatório com KPIs antes/depois' },
        { text: 'Backlog priorizado para próximos 90 dias', highlight: true }
      ],
      cta: 'Iniciar Sprint'
    },
    {
      id: 'growth',
      name: 'Conversion Accelerator',
      tagline: 'Para quem quer aumentar conversão em 30-90 dias',
      price: 'R$ 14.900',
      timeline: '30 dias',
      deliverable: 'Funil otimizado + Dashboard de acompanhamento',
      features: [
        { text: 'Tudo do Performance Sprint' },
        { text: 'Otimização de formulários e CTAs' },
        { text: 'Implementação de tracking avançado' },
        { text: 'A/B tests com 3 variações', highlight: true },
        { text: 'Dashboard GA4 + relatório semanal' },
        { text: 'Plano de retainer já estruturado', highlight: true }
      ],
      cta: 'Acelerar Conversão',
      popular: true
    },
    {
      id: 'scale',
      name: 'Growth Engine',
      tagline: 'Para escalar com dados e previsibilidade',
      price: 'R$ 24.900',
      timeline: '60 dias',
      deliverable: 'Sistema de crescimento + Retainer setup',
      features: [
        { text: 'Tudo do Conversion Accelerator' },
        { text: 'Campanhas Google Ads configuradas' },
        { text: 'Scripts de qualificação de leads' },
        { text: 'Sistema de customer match + LAL', highlight: true },
        { text: 'Retainer com fila de hipóteses priorizadas', highlight: true },
        { text: '3 meses de otimização contínua inclusos' }
      ],
      cta: 'Construir Engine'
    }
  ];

  const colorMap = {
    teal: {
      bg: 'bg-teal-500/20',
      border: 'border-teal-500/30',
      text: 'text-teal-400',
      glow: 'shadow-teal-500/50'
    },
    orange: {
      bg: 'bg-orange-500/20',
      border: 'border-orange-500/30',
      text: 'text-orange-400',
      glow: 'shadow-orange-500/50'
    },
    purple: {
      bg: 'bg-purple-500/20',
      border: 'border-purple-500/30',
      text: 'text-purple-400',
      glow: 'shadow-purple-500/50'
    }
  };

  return (
    <section className="relative overflow-hidden bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950 py-20 sm:py-28 lg:py-36">
      {/* Subtle Radial Gradients Background */}
      <StrategicRadialBg />

      <Container size="xl" className="relative z-20">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.6 }}
          className="text-center mb-16 sm:mb-20"
        >
          <Badge className="mb-6 border-teal-500/30 bg-teal-500/10 text-teal-400 backdrop-blur-sm text-sm sm:text-base px-4 py-2">
            <Sparkles className="w-4 h-4 mr-2" />
            Strategic Velocity Framework
          </Badge>

          <h2 className="mb-6 text-4xl sm:text-5xl lg:text-6xl font-bold text-white leading-tight">
            Da curiosidade ao{' '}
            <span className="bg-gradient-to-r from-teal-400 to-emerald-400 bg-clip-text text-transparent">
              retainer previsível
            </span>
          </h2>

          <p className="mx-auto max-w-3xl text-lg sm:text-xl text-slate-300 leading-relaxed">
            Nada de "cotação custom" ou negociação infinita. Degraus claros que transformam curiosos em clientes que pagam,{' '}
            <span className="text-teal-400 font-semibold">sem fumaça</span>.
          </p>
        </motion.div>

        {/* Velocity Ladder - 4 Degraus */}
        <div className="mb-20 sm:mb-24 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {velocityLadder.map((step, index) => {
            const Icon = step.icon;
            const colors = colorMap[step.color as keyof typeof colorMap];

            return (
              <motion.div
                key={step.step}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.1, duration: 0.5 }}
                whileHover={{ y: -8, scale: 1.02 }}
              >
                <Card className={`h-full border ${colors.border} bg-white/5 backdrop-blur-xl hover:bg-white/8 transition-all duration-300 relative overflow-hidden group`}>
                  {/* Step number badge */}
                  <div className={`absolute top-4 right-4 w-10 h-10 rounded-full ${colors.bg} border ${colors.border} flex items-center justify-center text-sm font-bold ${colors.text}`}>
                    {step.step}
                  </div>

                  <CardContent className="p-6">
                    <div className={`w-14 h-14 rounded-xl ${colors.bg} border ${colors.border} flex items-center justify-center mb-4 group-hover:scale-110 transition-transform duration-300`}>
                      <Icon className={`w-7 h-7 ${colors.text}`} />
                    </div>

                    <h3 className="text-xl font-bold text-white mb-2">
                      {step.title}
                    </h3>

                    <p className="text-sm text-slate-300 mb-3 leading-relaxed">
                      {step.description}
                    </p>

                    <div className={`text-xs ${colors.text} font-medium`}>
                      → {step.example}
                    </div>
                  </CardContent>

                  {/* Arrow connector (except last) */}
                  {index < velocityLadder.length - 1 && (
                    <div className="hidden lg:block absolute -right-3 top-1/2 -translate-y-1/2 z-30">
                      <ArrowRight className="w-6 h-6 text-slate-600" />
                    </div>
                  )}
                </Card>
              </motion.div>
            );
          })}
        </div>

        {/* Pacotes Produtizados */}
        <motion.div
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          viewport={{ once: true }}
          className="mb-16"
        >
          <div className="text-center mb-12">
            <h3 className="text-3xl sm:text-4xl font-bold text-white mb-4">
              Pacotes Produtizados
            </h3>
            <p className="text-slate-300 max-w-2xl mx-auto">
              Escopo fechado. Prazo definido. Métrica de sucesso clara. Nada de "depende".
            </p>
          </div>

          <div className="grid md:grid-cols-3 gap-6 lg:gap-8">
            {packages.map((pkg, index) => (
              <motion.div
                key={pkg.id}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.15, duration: 0.6 }}
                onHoverStart={() => setHoveredPackage(pkg.id)}
                onHoverEnd={() => setHoveredPackage(null)}
                className="relative"
              >
                {pkg.popular && (
                  <div className="absolute -top-4 left-1/2 -translate-x-1/2 z-30">
                    <Badge className="bg-gradient-to-r from-orange-500 to-red-500 text-white border-0 shadow-lg px-4 py-1">
                      <Zap className="w-3 h-3 mr-1" />
                      Mais Escolhido
                    </Badge>
                  </div>
                )}

                <Card className={`h-full border transition-all duration-300 ${
                  pkg.popular
                    ? 'border-orange-500/40 bg-gradient-to-br from-white/10 via-white/5 to-orange-500/5 scale-105'
                    : 'border-white/10 bg-white/5 hover:bg-white/8'
                } backdrop-blur-xl ${hoveredPackage === pkg.id ? 'shadow-2xl' : 'shadow-xl'}`}>
                  <CardContent className="p-6 sm:p-8">
                    {/* Header */}
                    <div className="mb-6">
                      <h4 className="text-2xl font-bold text-white mb-2">
                        {pkg.name}
                      </h4>
                      <p className="text-sm text-slate-400">
                        {pkg.tagline}
                      </p>
                    </div>

                    {/* Pricing */}
                    <div className="mb-6">
                      <div className="text-4xl font-bold text-white mb-2">
                        {pkg.price}
                      </div>
                      <div className="flex items-center gap-4 text-sm text-slate-400">
                        <div className="flex items-center gap-1">
                          <Clock className="w-4 h-4" />
                          {pkg.timeline}
                        </div>
                      </div>
                    </div>

                    {/* Deliverable */}
                    <div className="mb-6 p-4 rounded-lg bg-teal-500/10 border border-teal-500/30">
                      <div className="flex items-start gap-2">
                        <Target className="w-5 h-5 text-teal-400 flex-shrink-0 mt-0.5" />
                        <div>
                          <div className="text-xs text-teal-400 font-semibold uppercase mb-1">
                            Entregável Principal
                          </div>
                          <div className="text-sm text-white font-medium">
                            {pkg.deliverable}
                          </div>
                        </div>
                      </div>
                    </div>

                    {/* Features */}
                    <div className="mb-6 space-y-3">
                      {pkg.features.map((feature, idx) => (
                        <motion.div
                          key={idx}
                          className={`flex items-start gap-2 ${
                            feature.highlight ? 'bg-white/5 -mx-2 px-2 py-2 rounded' : ''
                          }`}
                          initial={{ opacity: 0, x: -10 }}
                          whileInView={{ opacity: 1, x: 0 }}
                          viewport={{ once: true }}
                          transition={{ delay: index * 0.15 + idx * 0.05 }}
                        >
                          <CheckCircle2 className={`w-5 h-5 flex-shrink-0 mt-0.5 ${
                            feature.highlight ? 'text-teal-400' : 'text-slate-500'
                          }`} />
                          <span className={`text-sm ${
                            feature.highlight ? 'text-white font-medium' : 'text-slate-300'
                          }`}>
                            {feature.text}
                          </span>
                        </motion.div>
                      ))}
                    </div>

                    {/* CTA */}
                    <motion.div
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                    >
                      <Button
                        size="lg"
                        className={`w-full font-bold ${
                          pkg.popular
                            ? 'bg-gradient-to-r from-teal-500 to-teal-600 hover:from-teal-600 hover:to-emerald-600 shadow-xl hover:shadow-teal-500/50'
                            : 'bg-white/10 hover:bg-white/20 border border-white/20'
                        } transition-all duration-300`}
                      >
                        {pkg.cta}
                        <ArrowRight className="w-5 h-5 ml-2" />
                      </Button>
                    </motion.div>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </div>
        </motion.div>

        {/* Why This Works */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          className="mt-20 sm:mt-24"
        >
          <Card className="border border-white/10 bg-white/5 backdrop-blur-xl overflow-hidden">
            <CardContent className="p-8 sm:p-12">
              <div className="grid lg:grid-cols-2 gap-8 items-center">
                <div>
                  <h3 className="text-3xl font-bold text-white mb-4">
                    Por que isso <span className="text-teal-400">funciona</span>
                  </h3>
                  <p className="text-slate-300 leading-relaxed mb-6">
                    Baseado em princípios validados por Brennan Dunn (Roadmapping pago), 
                    Jonathan Stark (Value Pricing) e modelos de assinatura tipo Flowout/Designjoy.
                  </p>

                  <div className="space-y-4">
                    <div className="flex items-start gap-3">
                      <div className="w-8 h-8 rounded-lg bg-teal-500/20 border border-teal-500/30 flex items-center justify-center flex-shrink-0">
                        <Shield className="w-4 h-4 text-teal-400" />
                      </div>
                      <div>
                        <h4 className="font-semibold text-white mb-1">Engenharia de Confiança</h4>
                        <p className="text-sm text-slate-400">
                          Cada degrau prova valor antes de pedir o próximo compromisso
                        </p>
                      </div>
                    </div>

                    <div className="flex items-start gap-3">
                      <div className="w-8 h-8 rounded-lg bg-orange-500/20 border border-orange-500/30 flex items-center justify-center flex-shrink-0">
                        <Lock className="w-4 h-4 text-orange-400" />
                      </div>
                      <div>
                        <h4 className="font-semibold text-white mb-1">Redução de Ambiguidade</h4>
                        <p className="text-sm text-slate-400">
                          Escopo fechado elimina a principal causa de morte de vendas de serviços
                        </p>
                      </div>
                    </div>

                    <div className="flex items-start gap-3">
                      <div className="w-8 h-8 rounded-lg bg-purple-500/20 border border-purple-500/30 flex items-center justify-center flex-shrink-0">
                        <BarChart3 className="w-4 h-4 text-purple-400" />
                      </div>
                      <div>
                        <h4 className="font-semibold text-white mb-1">Aquisição Metódica</h4>
                        <p className="text-sm text-slate-400">
                          Search de alta intenção → Custom segments → Customer Match/LAL
                        </p>
                      </div>
                    </div>
                  </div>
                </div>

                <div className="bg-slate-900/50 p-6 rounded-xl border border-white/10">
                  <h4 className="text-xl font-bold text-white mb-6 flex items-center gap-2">
                    <DollarSign className="w-5 h-5 text-teal-400" />
                    Métricas que Importam
                  </h4>

                  <div className="space-y-4">
                    {[
                      { label: 'Opt-in do imã', value: '> 15%', desc: 'em tráfego qualificado' },
                      { label: 'Book rate', value: '> 30%', desc: 'sobre leads capturados' },
                      { label: 'Take-rate tripwire', value: '> 20%', desc: 'leads quentes → diagnóstico' },
                      { label: 'Lead → Pacote', value: '> 40%', desc: 'após diagnóstico pago' }
                    ].map((metric, idx) => (
                      <motion.div
                        key={idx}
                        initial={{ opacity: 0, x: -20 }}
                        whileInView={{ opacity: 1, x: 0 }}
                        viewport={{ once: true }}
                        transition={{ delay: idx * 0.1 }}
                        className="flex items-center justify-between p-3 rounded-lg bg-white/5"
                      >
                        <div>
                          <div className="text-sm font-medium text-white">{metric.label}</div>
                          <div className="text-xs text-slate-400">{metric.desc}</div>
                        </div>
                        <div className="text-xl font-bold text-teal-400">
                          {metric.value}
                        </div>
                      </motion.div>
                    ))}
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </motion.div>

        {/* Final CTA */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          className="mt-16 text-center"
        >
          <Card className="inline-block border border-teal-500/30 bg-gradient-to-r from-teal-500/20 to-orange-500/20 backdrop-blur-xl shadow-xl">
            <CardContent className="p-6 sm:p-8">
              <div className="flex flex-col sm:flex-row items-center gap-4">
                <div className="flex items-center justify-center gap-2 text-teal-400">
                  <motion.div
                    animate={{ rotate: [0, -10, 10, -10, 0] }}
                    transition={{ duration: 2, repeat: Infinity, repeatDelay: 3 }}
                  >
                    <Calendar className="w-6 h-6" />
                  </motion.div>
                  <span className="font-semibold">Próximo passo:</span>
                </div>
                <p className="text-white">
                  Agendar <span className="font-bold text-teal-400">Diagnóstico Express</span> (R$ 497) ou baixar{' '}
                  <span className="font-bold text-orange-400">Checklist gratuito</span>
                </p>
              </div>
            </CardContent>
          </Card>
        </motion.div>
      </Container>
    </section>
  );
};

export default StrategicVelocitySection;
